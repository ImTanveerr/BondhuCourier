"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminRoutes = void 0;
const express_1 = require("express");
const user_validation_1 = require("../user/user.validation");
const ValidateRequest_1 = require("../../middlewares/ValidateRequest");
const user_model_1 = require("../user/user.model");
const checkAuth_1 = require("../../middlewares/checkAuth");
const admin_controllers_1 = require("./admin.controllers");
const router = (0, express_1.Router)();
router.get("/all-users", (0, checkAuth_1.checkAuth)(user_model_1.Role.ADMIN, user_model_1.Role.SUPER_ADMIN), admin_controllers_1.AdminControllers.getAllUsers);
router.get("/all-parcels", (0, checkAuth_1.checkAuth)(user_model_1.Role.ADMIN, user_model_1.Role.SUPER_ADMIN), admin_controllers_1.AdminControllers.getAllParcels);
router.patch("/update-user/:id", (0, ValidateRequest_1.validateRequest)(user_validation_1.updateUserZodSchema), (0, checkAuth_1.checkAuth)(...Object.values(user_model_1.Role)), admin_controllers_1.AdminControllers.updateUser);
router.patch("/parcel/:id", admin_controllers_1.AdminControllers.updateParcel);
router.post("/approve-parcel/:id", admin_controllers_1.AdminControllers.ApproveParcel);
router.post("/cancel-parcel/:id", admin_controllers_1.AdminControllers.CancelParcel);
router.post("/block-user/:id", admin_controllers_1.AdminControllers.BlockUser);
router.post("/unblock-user/:id", admin_controllers_1.AdminControllers.UnBlockUser);
exports.AdminRoutes = router;
